version = 3.3.3

preset = default
maxColumn = 100
# project.git = false
project {
  includeFilters = [".*\\.scala$"]
  excludeFilters = [".*\\/t@rget\\/.*\\.scala$"]
}

comments {
  wrap = standalone
}
docstrings {
  style = SpaceAsterisk
  wrap = yes
  oneline = fold
}
xmlLiterals {
  assumeFormatted = true
}

danglingParentheses.preset = true
assumeStandardLibraryStripMargin = true
includeCurlyBraceInSelectChains = true
includeNoParensInSelectChains = false
lineEndings = unix

verticalMultiline.atDefnSite = false

continuationIndent {
  callSite = 2
  defnSite = 4
  extendSite = 4
}

align {
  preset = none
  stripMargin = false
  tokens = []
  openParenCallSite = false
  openParenDefnSite = false
  arrowEnumeratorGenerator = false
}

newlines {
  source = fold
  alwaysBeforeElseAfterCurlyIf = false
  topLevelStatements = [before,after]
  topLevelStatementsMinBreaks = 1
  beforeCurlyLambdaParams = never
  afterCurlyLambdaParams = squash
  avoidAfterYield = false
  implicitParamListModifierForce = []
  implicitParamListModifierPrefer = after
  penalizeSingleSelectMultiArgList = false
  sometimesBeforeColonInMethodReturnType = false
  avoidForSimpleOverflow = [slc]
}

spaces.afterKeywordBeforeParen = true

binPack {
  literalArgumentLists = true
  parentConstructors = true
  literalsExclude = []
}

runner {
  dialect = scala213
  fatalWarnings = true
  optimizer {
    forceConfigStyleOnOffset = 90
    forceConfigStyleMinArgCount = 2
    maxVisitsPerToken = 50000
  }
}

optIn {
  breakChainOnFirstMethodDot = false
  annotationNewlines = false
  selfAnnotationNewline = false
  configStyleArguments = true
}

rewrite {
  rules = [
    AvoidInfix,
    Imports,
    PreferCurlyFors,
    SortModifiers,
    RedundantBraces,
    RedundantParens
  ]
  imports {
    sort = ascii
    expand = true
    groups = [
      ["javax?\\..*"],
      ["scala\\..*"],
      ["org\\..*"],
      ["com\\..*"]
    ]
  }
  # https://docs.scala-lang.org/style/declarations.html#modifiers
  sortModifiers.order = [
    "override",
    "private", "protected",
    "implicit",
    "final", "sealed", "abstract",
    "lazy"
  ]
  preferCurlyFors {
    removeTrailingSemicolonsOnly = true
  }
  redundantBraces {
    generalExpressions = true
    ifElseExpressions = true
    maxLines = 100
    stringInterpolation = true
    methodBodies = true
  }
  neverInfix.excludeFilters = [
    until
    to
    by
    eq
    ne
    synchronized
  ]
}

fileOverride {
  "glob:**/{test,it,src/test/scala}/{*.scala,**/*.scala}" {
    optIn.configStyleArguments = false
    newlines {
      topLevelStatementsMinBreaks = 3
      sometimesBeforeColonInMethodReturnType = true
      implicitParamListModifierPrefer = null
    }
    binPack {
      literalsIncludeSimpleExpr = true
      unsafeCallSite = Oneline
      unsafeDefnSite = Oneline
    }
    rewrite.neverInfix.excludeFilters = [
      until
      to
      by
      eq
      ne
      "should.*"
      "contain.*"
      "must.*"
      in
      ignore
      be
      of
      message
      taggedAs
      thrownBy
      synchronized
      have
      when
      size
      only
      noneOf
      "one.*Of"
      "atLeast.*Of"
      "atMost.*Of"
      "all.*Of"
      noElementsOf
      "inOrder.*"
      "theSame.*As"
      length
      regex
      key
      include
      and
      or
    ]
  }
}
